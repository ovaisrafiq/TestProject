security:
    encoders:
        App\Entity\User: {algorithm: bcrypt, iterations: 10}
        #algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        # dev:
        #     pattern: ^/(_(profiler|wdt)|css|images|js)/
            #security: false
        # main:
        #     anonymous: ~
        #     http_basic: ~

        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                username_path : email
                password_path : password
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        #provider: chain_provider
        api:
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        user:
            pattern:   ^/user/number
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        post:
            pattern:   ^/post/create
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        post_update:
            pattern:   ^/post/update
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        post_delete:
            pattern:   ^/post/delete
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        post_list:
            pattern:   ^/post/list
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator                    

        likes:
            pattern:   ^/likes/create
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        comments:
            pattern:   ^/comments/create
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        # access_control:
        #     - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #     - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }        

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
